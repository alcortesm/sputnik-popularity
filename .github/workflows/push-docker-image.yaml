# This workflow will build a docker image and push it to Google Container
# Registry.

name: Push docker image

on:
  push:
    branches:
      - master
      - CD

env:
  DOCKER_IMAGE: sputnik
  DOCKER_CONTAINER_NAME: sputnik
  GCE_INSTANCE_NAME: ${{ secrets.GCE_INSTANCE_NAME }}
  GCE_INSTANCE_ZONE: ${{ secrets.GCE_INSTANCE_ZONE }}
  GCE_PROJECT_ID: ${{ secrets.GCE_PROJECT_ID }}
  SPUTNIK_INFLUXDB_URL: ${{ secrets.SPUTNIK_INFLUXDB_URL }}
  SPUTNIK_INFLUXDB_TOKEN_WRITE: ${{ secrets.SPUTNIK_INFLUXDB_TOKEN_WRITE }}
  SPUTNIK_INFLUXDB_TOKEN_READ: ${{ secrets.SPUTNIK_INFLUXDB_TOKEN_READ }}
  SPUTNIK_SCRAPE_URL: ${{ secrets.SPUTNIK_SCRAPE_URL }}
  SPUTNIK_SCRAPE_GYM_NAME: ${{ secrets.SPUTNIK_SCRAPE_GYM_NAME }}
  SPUTNIK_SCRAPE_GYM_ID: ${{ secrets.SPUTNIK_SCRAPE_GYM_ID }}

jobs:
  setup-build-push:
    name: "Build and Push"
    runs-on: ubuntu-latest

    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - name: "Setup gcloud CLI"
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
      with:
        service_account_key: ${{ secrets.GCE_SA_KEY_REGISTRY_PUSH }}
        project_id: ${{ secrets.GCE_PROJECT_ID }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker gcr.io

    # Build the Docker image
    - name: Build docker image
      run: |-
        docker build \
          --tag gcr.io/$GCE_PROJECT_ID/$DOCKER_IMAGE:$GITHUB_SHA \
          --target run-app \
          .

    # Push the Docker image to Google Container Registry
    #
    # Roles required:
    #   - Storage Admin
    - name: Push docker image
      run: |-
        docker push gcr.io/$GCE_PROJECT_ID/$DOCKER_IMAGE:$GITHUB_SHA

    - name: Pull docker image
      run: |-
        gcloud compute ssh $GCE_INSTANCE_NAME \
            --zone=$GCE_INSTANCE_ZONE \
            --command="docker pull gcr.io/$GCE_PROJECT_ID/$DOCKER_IMAGE:$GITHUB_SHA"

    # Stop and delete the container running the old image and
    # run a new container with the newly pushed image
    #
    # Roles required for the service account:
    #  - Compute Viewer
    #  - Service Account User
    #
    # Roles required on the VM instance:
    #  - Compute Instance Admin (v1)
    - name: Run docker image in a container
      run: |-
        echo gcr.io/$GCE_PROJECT_ID/$DOCKER_IMAGE:$GITHUB_SHA
        docker images
        gcloud compute ssh $GCE_INSTANCE_NAME \
            --zone=$GCE_INSTANCE_ZONE \
            --command="\
              docker stop $DOCKER_CONTAINER_NAME && \
              docker container rm $DOCKER_CONTAINER_NAME && \
              docker run \
                --detach \
                --env SPUTNIK_INFLUXDB_URL=$SPUTNIK_INFLUXDB_URL \
                --env SPUTNIK_INFLUXDB_TOKEN_WRITE=$SPUTNIK_INFLUXDB_TOKEN_WRITE \
                --env SPUTNIK_INFLUXDB_TOKEN_READ=$SPUTNIK_INFLUXDB_TOKEN_READ \
                --env SPUTNIK_SCRAPE_URL=$SPUTNIK_SCRAPE_URL \
                --env SPUTNIK_SCRAPE_GYM_NAME=$SPUTNIK_SCRAPE_GYM_NAME \
                --env SPUTNIK_SCRAPE_GYM_ID=$SPUTNIK_SCRAPE_GYM_ID \
                --name $DOCKER_CONTAINER_NAME \
                --log-driver=gcplogs \
                --publish 8080:8080 \
                gcr.io/$GCE_PROJECT_ID/$DOCKER_IMAGE:$GITHUB_SHA"
